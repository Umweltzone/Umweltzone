buildscript {
    ext {
        // Plugins
        androidGradlePluginVersion = "4.0.1"
        gradleVersionsPluginVersion = "0.29.0"
        proguardGradlePluginVersion = "6.2.2"
        strictVersionMatcherPluginVersion = "1.2.1"

        // Libraries
        annotationVersion = "1.1.0"
        assertjAndroidVersion = "1.2.0"
        cardViewVersion = "1.0.0"
        ckChangelogVersion = "1.2.2"
        constraintLayoutVersion = "1.1.3"
        coreKtxVersion = "1.3.1"
        espressoVersion = "3.2.0"
        jacksonVersion = "2.11.1"
        junitVersion = "4.13"
        kotlinVersion = "1.3.72"
        materialVersion = "1.1.0"
        parcelerVersion = "1.1.13"
        playServicesBaseVersion = "17.3.0"
        playServicesMapsVersion = "17.0.0"
        preferenceVersion = "1.1.1"
        roadSignsVersion = "3.1.0"
        snackengagePlayrateVersion = "0.25"
        testExtJunitVersion = "1.1.1"
        testRulesVersion = "1.2.0"
        typedPreferencesVersion = "2.1.0"
    }

    repositories {
        google()
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath "com.android.tools.build:gradle:$androidGradlePluginVersion"
        classpath "com.github.ben-manes:gradle-versions-plugin:$gradleVersionsPluginVersion"
        classpath "com.google.android.gms:strict-version-matcher-plugin:$strictVersionMatcherPluginVersion"
        classpath "net.sf.proguard:proguard-gradle:$proguardGradlePluginVersion"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
    }
}

apply plugin: "com.github.ben-manes.versions"

dependencyUpdates {
    def isNonStable = { String version ->
        def stableKeyword = ["RELEASE", "FINAL", "GA"].any { qualifier -> version.toUpperCase().contains(qualifier) }
        def regex = /^[0-9,.v-]+(-r)?$/
        return !stableKeyword && !(version ==~ regex)
    }
    rejectVersionIf {
        isNonStable(it.candidate.version)
    }
}
